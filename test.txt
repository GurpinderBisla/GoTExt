package main

import (
	"fmt"
)

type Product struct {
	ID       int
	Name     string
	Price    float64
	Quantity int
}

type Cart struct {
	Items []Product
}

func (cart *Cart) AddToCart(product Product, quantity int) {
	for i, item := range cart.Items {
		if item.ID == product.ID {
			cart.Items[i].Quantity += quantity
			return
		}
	}

	product.Quantity = quantity
	cart.Items = append(cart.Items, product)
}

func (cart *Cart) CalculateTotal() float64 {
	total := 0.0
	for _, item := range cart.Items {
		total += item.Price * float64(item.Quantity)
	}
	return total
}

func main() {
	product1 := Product{ID: 1, Name: "Smartphone", Price: 599.99}
	product2 := Product{ID: 2, Name: "Laptop", Price: 1099.99}
	product3 := Product{ID: 3, Name: "Headphones", Price: 149.99}

	cart := Cart{}

	cart.AddToCart(product1, 2)
	cart.AddToCart(product2, 1)
	cart.AddToCart(product3, 3)

	fmt.Println("Items in the cart:")
	for _, item := range cart.Items {
		fmt.Printf("%s x%d - $%.2f each\n", item.Name, item.Quantity, item.Price)
	}

	total := cart.CalculateTotal()
	fmt.Printf("Total: $%.2f\n", total)
}
